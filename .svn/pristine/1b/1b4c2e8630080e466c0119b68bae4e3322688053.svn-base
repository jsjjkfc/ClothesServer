package com.twocore.controller;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.twocore.bean.resp.GoodsListModel;
import com.twocore.bean.resp.RespProductData;
import com.twocore.bean.resp.RespProductsModel;
import com.twocore.model.PicModel;
import com.twocore.model.ProductModel;
import com.twocore.model.SupplierModel;
import com.twocore.model.TypeModel;
import com.twocore.model.UserModel;
import com.twocore.service.IGoodListService;
import com.twocore.service.IPictureService;
import com.twocore.service.IProductService;
import com.twocore.service.IProductTypeService;
import com.twocore.service.ISupplierService;
import com.twocore.service.IUserService;

@Scope("prototype")
// singleton为单例模式
@Controller
@RequestMapping("/home")
/**
 * 后台管理页
 * @author lupeng
 *
 */
public class HomeController {
	@Resource(name = "goodListService")
	IGoodListService goodListService;
	@Resource(name = "productService")
	IProductService productService;
	@Resource(name = "supplierService")
	ISupplierService supplierService;
	@Resource(name = "productTypeService")
	IProductTypeService productTypeService;
	@Resource(name = "pictureService")
	IPictureService pictureService;
	@Resource(name = "userService")
	IUserService userService;

	@RequestMapping(value = "/data", method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
	public @ResponseBody List<GoodsListModel> getPic() {
		return goodListService.getGoodList();
	}

	@RequestMapping(value = "/hello", method = RequestMethod.GET)
	public String getHello() {
		return "hello";
	}

	// 商品数据列表服务
	@SuppressWarnings("rawtypes")
	@RequestMapping(value = "/prdoucts", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public @ResponseBody RespProductsModel getProducts(
			@RequestParam String aoData) {
		String sEcho = null;
		int iDisplayStart = 0; // 起始索引
		int iDisplayLength = 0; // 每页显示的行数
		ObjectMapper objectMapper = new ObjectMapper();
		try {
			List list = objectMapper.readValue(aoData, List.class);
			for (int i = 0; i < list.size(); i++) {
				Map map = (Map) list.get(i);
				Set set = map.keySet();
				Iterator it = set.iterator();
				while (it.hasNext()) {
					String key = (String) it.next();
					if (map.get(key).equals("sEcho"))
						sEcho = map.get("value") + "";
					if (map.get(key).equals("iDisplayStart"))
						iDisplayStart = (Integer) map.get("value");
					if (map.get(key).equals("iDisplayLength"))
						iDisplayLength = (Integer) map.get("value");
				}
			}
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		RespProductsModel productsModel = new RespProductsModel();
		List<RespProductData> list = productService.getProducts(iDisplayStart,
				iDisplayLength);
		productsModel.setAaData(list);
		productsModel.setsEcho(sEcho);
		int count = productService.getProductCount();
		productsModel.setiTotalRecords(count);
		productsModel.setiTotalDisplayRecords(count);
		return productsModel;
	}

	// 获取所有供应商
	@RequestMapping(value = "/supplier", method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
	public @ResponseBody List<SupplierModel> getSuppliers() {
		return supplierService.getAllSupplier();
	}

	// 获取所有商品类型
	@RequestMapping(value = "/type", method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
	public @ResponseBody List<TypeModel> getTypes() {
		return productTypeService.getTypes();
	}

	// 添加一个商品
	@RequestMapping(value = "/addProduct", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public @ResponseBody String addProduct(MultipartHttpServletRequest request,
			HttpServletResponse response) {
		String pics = request.getParameter("pics");
		String[] pic = pics.split(",");
		List<String> list = Arrays.asList(pic);
		ProductModel productModel = new ProductModel();
		productModel.setName(request.getParameter("name"));
		if (request.getParameter("supplier") != null) {
			productModel.setSupplierId(Integer.parseInt(request
					.getParameter("supplier")));
		}
		if (request.getParameter("type") != null) {
			String typeid = request.getParameter("type");
			TypeModel model = productTypeService.getTypeById(Integer
					.parseInt(typeid));
			productModel.setType(model);
		}
		productModel.setDesc(request.getParameter("desc"));
		productModel.setPrice(Float.valueOf(request.getParameter("price")));
		productModel.setSalePrice(Float.valueOf(request
				.getParameter("salePrice")));
		Set<PicModel> picPathes = new HashSet<PicModel>();
		for (String url : list) {
			PicModel model = new PicModel();
			model.setPicPath(url);
			picPathes.add(model);
		}
		productModel.setPicPathes(picPathes);
		productService.addProduct(productModel);
		return "success";
	}

	// 修改一个商品
	@RequestMapping(value = "/updateProduct", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public @ResponseBody String updateProduct(
			MultipartHttpServletRequest request, HttpServletResponse response) {
		String pics = request.getParameter("pics");
		String[] pic = pics.split(",");
		List<String> list = Arrays.asList(pic);
		String productId = request.getParameter("id");
		ProductModel oldProduct = productService.getProductById(Integer
				.parseInt(productId));
		oldProduct.setName(request.getParameter("name"));
		if (request.getParameter("supplier") != null) {
			oldProduct.setSupplierId(Integer.parseInt(request
					.getParameter("supplier")));
		}
		if (request.getParameter("type") != null) {
			String typeid = request.getParameter("type");
			TypeModel model = productTypeService.getTypeById(Integer
					.parseInt(typeid));
			oldProduct.setType(model);
		}
		oldProduct.setDesc(request.getParameter("desc"));
		oldProduct.setPrice(Float.valueOf(request.getParameter("price")));
		oldProduct
				.setSalePrice(Float.valueOf(request.getParameter("salePrice")));
		Set<PicModel> picPathes = new HashSet<PicModel>();
		for (String url : list) {
			if (!url.equals("")) {
				PicModel model = new PicModel();
				model.setPicPath(url);
				model.setProductModel(oldProduct);
				picPathes.add(model);
			}
		}
		oldProduct.setPicPathes(picPathes);
		productService.updateProduct(oldProduct);
		return "success";
	}

	// 删除一个商品
	@RequestMapping(value = "/deleteProduct", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public @ResponseBody String deleteProduct(HttpServletRequest request,
			HttpServletResponse response) {
		String productId = request.getParameter("id");
		ProductModel oldProduct = productService.getProductById(Integer
				.parseInt(productId));
		productService.deleteProduct(oldProduct);
		return "success";
	}

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public ModelAndView login(HttpServletRequest request,
			HttpServletResponse response, HttpSession httpSession) {
		if (httpSession.getAttribute("uname") != null) {
			UserModel model = userService.queryByWeid(httpSession.getAttribute(
					"uname").toString());
			Map<String, Object> data = new HashMap<String, Object>();
			data.put("user", model);
			return new ModelAndView("page/user_profile", data);
		}
		return new ModelAndView("page/login");
	}
}
